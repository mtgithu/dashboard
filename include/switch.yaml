
switch:

    ####################################################
    #                                                  #
    #                     SWITCHES                     #
    #                                                  #
    ####################################################

  - platform: wake_on_lan
    name: wol_imac
    host: !secret wake_on_lan_host
    mac: !secret wake_on_lan_mac

  - platform: rest
    name: Watchtower
    resource: !secret ha_dockermon_watchtower
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: >
      {{ value_json is not none and value_json.state == "running" }}

    ####################################################
    #                                                  #
    #                     TEMPLATE                     #
    #                                                  #
    ####################################################

  - platform: template
    switches:
      computer_imac:
        friendly_name: Dator
        icon_template: custom:imac-alternative
        value_template: >
          {{ is_state('switch.wol_imac', 'on') }}
        turn_on:
          - service: shell_command.imac_switchbot
          - service: light.turn_on
            entity_id: light.dator
        turn_off:
          - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.computer_lock
                  state: 'on'
              sequence:
                - service: browser_mod.toast
                  data:
                    duration: 8000
                    message: Dator 채r l책st fr책n att st채ngas av...
            default:
              - service: shell_command.imac_off

      tv_sony:
        friendly_name: Tv
        icon_template: custom:tv
        value_template: >
          {{ is_state('media_player.sony_bravia_tv', 'on') }}
        turn_on:
          - service: remote.send_command
            data:
              entity_id: remote.vardagsrum
              command: menu
        turn_off:
          - service: media_player.turn_off
            entity_id: media_player.sony_bravia_tv

      tv_samsung:
        friendly_name: "Tv\u00B2"
        icon_template: custom:tv
        value_template: >
          {{ is_state('media_player.samsung_tv', 'on') }}
        turn_on:
          - service: remote.send_command
            data:
              entity_id: remote.sovrum
              command: menu
        turn_off:
          - service: media_player.turn_off
            entity_id: media_player.samsung_tv

      monitors_mute:
        value_template: >
          {{ is_state('binary_sensor.monitors_mute_state', 'on') }}
        turn_on:
          - service: shell_command.monitors_mute_on
          - service: homeassistant.update_entity
            entity_id: binary_sensor.monitors_mute_state
        turn_off:
          - service: shell_command.monitors_mute_off
          - service: homeassistant.update_entity
            entity_id: binary_sensor.monitors_mute_state

      playstation_5:
        friendly_name: Playstation
        icon_template: mdi:sony-playstation
        value_template: >
          {{ states('sensor.playstation') }}
        turn_on:
          - service: shell_command.playstation_5_wake
          - service: media_player.turn_on
            entity_id: media_player.samsung_tv
          - repeat:
              count: 10
              # report state
              sequence:
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: sensor.playstation
                      state: 'on'
                - delay:
                    seconds: 2
                - service: homeassistant.update_entity
                  entity_id: sensor.playstation
        turn_off:
          - service: shell_command.playstation_5_sleep
          - service: media_player.turn_off
            entity_id: media_player.samsung_tv
          - repeat:
              count: 10
              # report state
              sequence:
                - condition: not
                  conditions:
                    - condition: state
                      entity_id: sensor.playstation
                      state: 'off'
                - delay:
                    seconds: 2
                - service: homeassistant.update_entity
                  entity_id: sensor.playstation
